<!DOCTYPE html>
<html lang="it">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salute & Benessere Naturale</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="/css/styles.css">
</head>

<body>
    <!-- Navbar (usa lo stesso del tuo layout principale) -->
    <%- include('../partials/navbar') %>

        <!-- Sezione principale del Timer -->
        <section class="hero-section d-flex align-items-center justify-content-center text-center text-white">
            <div class="container">
                <h1 class="display-5 mb-4">Timer Benessere</h1>
                <p class="lead mb-5">Meditazione â€¢ Allenamento â€¢ Relax</p>

                <div class="timer-container">
                    <div class="timer-display text-center">
                        <h2 id="time-display">05:00</h2>
                    </div>

                    <div class="compact-input-group">
                        <div class="time-input-container">
                            <label for="minutes">Minuti</label>
                            <input type="number" class="time-input" id="minutes" min="0" max="120" value="5">
                        </div>
                        <div class="time-input-container">
                            <label for="seconds">Secondi</label>
                            <input type="number" class="time-input" id="seconds" min="0" max="59" value="0">
                        </div>
                    </div>

                    <div class="timer-controls">
                        <button class="timer-btn" id="start-btn">Avvia</button>
                        <button class="timer-btn" id="pause-btn" disabled>Pausa</button>
                        <button class="timer-btn" id="reset-btn">Reset</button>
                    </div>

                    <select class="sound-select text-dark" id="sound-select">
                        <option value="bell">ðŸ”” Campana</option>
                        <option value="chime">ðŸª· Bonghi</option>
                        <option value="beep">ðŸ”Š Beep</option>
                        <option value="none">ðŸ”‡ Nessuno</option>
                    </select>

                    <div class="auto-restart-container">
                        <input class="form-check-input" type="checkbox" id="auto-restart">
                        <label class="form-check-label" for="auto-restart">Riavvio automatico</label>
                    </div>
                </div>
            </div>
        </section>

        <!-- Sezione informazioni -->
        <section class="py-5 bg-light-timer">
            <div class="container">
                <div class="row">
                    <div class="col-md-4 mb-4">
                        <div class="text-center p-4">
                            <div class="feature-icon">
                                <i class="fas fa-spa"></i>
                            </div>
                            <h3>Meditazione</h3>
                            <p>Imposta il timer per sessioni di meditazione guidata o respirazione consapevole.</p>
                        </div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <div class="text-center p-4">
                            <div class="feature-icon">
                                <i class="fas fa-dumbbell"></i>
                            </div>
                            <h3>Allenamento</h3>
                            <p>Per interval training, Tabata o sessioni di stretching.</p>
                        </div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <div class="text-center p-4">
                            <div class="feature-icon">
                                <i class="fas fa-coffee"></i>
                            </div>
                            <h3>Pause</h3>
                            <p>Ricordati di fare brevi pause durante il lavoro per mantenere la produttivitÃ .</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- footer (usa lo stesso del tuo layout principale) -->
        <%- include('../partials/footer') %>

            <!-- Scripts  da capire se spostare in un file timer.js -->
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                // Variabili del timer
                let timer;
                let totalSeconds = 0;
                let isRunning = false;
                let currentAudio = null; // Variabile per tenere traccia dell'audio corrente

                // Elementi DOM
                const timeDisplay = document.getElementById('time-display');
                const startBtn = document.getElementById('start-btn');
                const pauseBtn = document.getElementById('pause-btn');
                const resetBtn = document.getElementById('reset-btn');
                const minutesInput = document.getElementById('minutes');
                const secondsInput = document.getElementById('seconds');
                const soundSelect = document.getElementById('sound-select');
                const autoRestart = document.getElementById('auto-restart');

                // Suoni
                const sounds = {
                    bell: new Audio('https://assets.mixkit.co/active_storage/sfx/930/930-preview.mp3'),
                    chime: new Audio('https://assets.mixkit.co/active_storage/sfx/1359/1359-preview.mp3'),
                    beep: new Audio('https://assets.mixkit.co/active_storage/sfx/989/989-preview.mp3')
                };

                // Funzione per fermare l'audio corrente
                function stopCurrentAudio() {
                    if (currentAudio) {
                        currentAudio.pause();
                        currentAudio.currentTime = 0;
                        currentAudio = null;
                    }
                }

                // Inizializza/aggiorna il timer
                function initTimer() {
                    const minutes = parseInt(minutesInput.value) || 0;
                    const seconds = parseInt(secondsInput.value) || 0;
                    totalSeconds = minutes * 60 + seconds;
                    updateDisplay();
                    stopCurrentAudio(); // Ferma l'audio quando si reinizializza il timer
                }

                // Aggiorna il display
                function updateDisplay() {
                    const minutes = Math.floor(totalSeconds / 60);
                    const seconds = totalSeconds % 60;
                    timeDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                }

                // Avvia il timer
                function startTimer() {
                    if (isRunning) return;

                    if (totalSeconds <= 0) initTimer();
                    if (totalSeconds <= 0) return;

                    isRunning = true;
                    startBtn.disabled = true;
                    pauseBtn.disabled = false;
                    minutesInput.disabled = true;
                    secondsInput.disabled = true;

                    timer = setInterval(() => {
                        totalSeconds--;
                        updateDisplay();

                        if (totalSeconds <= 0) {
                            clearInterval(timer);
                            isRunning = false;
                            playSound();
                            minutesInput.disabled = false;
                            secondsInput.disabled = false;

                            if (autoRestart.checked) {
                                initTimer();
                                startTimer();
                            } else {
                                startBtn.disabled = false;
                                pauseBtn.disabled = true;
                            }
                        }
                    }, 1000);
                }

                // Metti in pausa il timer
                function pauseTimer() {
                    clearInterval(timer);
                    isRunning = false;
                    startBtn.disabled = false;
                    pauseBtn.disabled = true;
                    minutesInput.disabled = false;
                    secondsInput.disabled = false;
                    stopCurrentAudio(); // Ferma l'audio quando si mette in pausa
                }

                // Resetta il timer
                function resetTimer() {
                    pauseTimer();
                    initTimer();
                }

                // Riproduci il suono selezionato
                function playSound() {
                    stopCurrentAudio(); // Ferma eventuali audio precedenti

                    const soundType = soundSelect.value;
                    if (soundType !== 'none' && sounds[soundType]) {
                        currentAudio = sounds[soundType];
                        currentAudio.currentTime = 0;
                        currentAudio.play();
                    }
                }

                // Event listeners
                startBtn.addEventListener('click', startTimer);
                pauseBtn.addEventListener('click', pauseTimer);
                resetBtn.addEventListener('click', resetTimer);
                minutesInput.addEventListener('change', initTimer);
                secondsInput.addEventListener('change', initTimer);

                // Inizializza al caricamento
                document.addEventListener('DOMContentLoaded', function () {
                    initTimer();

                    // Validazione input
                    minutesInput.addEventListener('input', function () {
                        if (this.value > 120) this.value = 120;
                        if (this.value < 0) this.value = 0;
                    });

                    secondsInput.addEventListener('input', function () {
                        if (this.value > 59) this.value = 59;
                        if (this.value < 0) this.value = 0;
                    });
                });
            </script>
</body>

</html>